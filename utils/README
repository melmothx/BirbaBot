# dpkg factoids management utilities

BirbaBot is able to use factoids from dpkg, an infobot running on the Debian IRC support channel
at oftc; but these facts must be imported into Birba sqlite database from dpkg mysql one.. 
moreover dpkg database is, unfortunately, full of garbage so we think you can safely delete several 
facts which birba does not support at all.

To do these operations (import and deletion) i have wrote some perl scripts which i'm going to 
illustrate to you. Over the time i've experienced different ways to operate and i am going to 
explain to you the one which i think should be preferred: by the way, feel free to read the content
 of all the scripts to look at differences and options, if you happen to be familiar with Perl.
------------------------------------------------------------------------------------------------

## This is the way i would follow
## dpkg/#debian Bot mysql database Cleanup Utility
dpkg_facts-mysql-delete.pl

First you need to setup a mysql database and import dpkg's data.
A nightly exported dump of dpkg's db can be found at: http://crito.ucr.edu/~dpkg/
Save it to disk and gunzip it.
Import apt_dump in your mysql databse like:

$ mysql -u user -p dbname < apt_dump

Now we have a mysql db with all of dpkg facts: next step is to delete unsupported/unwanted facts
from it. Edit "dpkg_facts-mysql-delete.pl" with data about your mysql configuration and then run:

$ ./dpkg_facts-mysql-delete.pl

If all is good we now have a mysql db without garbage and ready to be imported into Birba.
------------------------------------------------------------------------------------------------

## dpkg/#debian Bot database Import Utility
dpkg_facts-import.pl

This Utility can be used to import the factoids table from the mysql database of "dpkg", previously
set-up. It only inserts new factoids, does not overwrite nor update existing ones.

## How it works
You need to stop BirbaBot, copy its sqlite db (birba.db) into the "utils" dir, where this README 
is located. If you changed name to the database, please move it to birba.db while doing this 
operations and then move back to whatever you chose in config file.

Finally edit "dpkg_facts-import.pl" and set the custom variables for the sql connection handles.
run the script:

$ ./dpkg_facts-import.pl

Copy the updated birba.db back to the root of BirbaBot, start the bot. You're set.


** note #1

If you added some facts before running the importer, they will not be overwritten and you'll see
a failed execution query, like this:
DBD::SQLite::st execute failed: column key is not unique at ./dpkg_facts-import.pl line 49.

*** note #2

If this is the second (or ahead) time you are about to upgrade dpkg factoids, you have to run the
dpkg_facts-delete.pl script before the import one.
------------------------------------------------------------------------------------------------

## dpkg/#debian Bot database Cleanup Utility
dpkg_facts-delete.pl

When you want to update an **existent** database for BirbaBot, you need first of all to get rid
of old facts: this script does not delete facts you personally stored while using BirbaBot in
channel; it just deletes "dpkg" facts (i.e. facts imported by the import utility).

$ ./dpkg_facts-delete.pl

Now that we have a clean database we ca start the import again; see the step above.

$ ./dpkg_facts-import.pl

Now the database is up-to-date.
